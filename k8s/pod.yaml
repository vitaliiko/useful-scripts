apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    name: myapp
spec:
  containers:
  - name: myapp-container
    image: my-app-image
    command:
    - '/bin/sh'
    - '-c'
    - 'sleep 3600'
    readinessProbe:
      httpGet:
        path: /ready
        port: 8080
    livenessProbe:
      httpGet:
        path: /health
        port: 8080
    ports:
    - containerPort: 8081
    envFrom: # To import all properties from config map or secret
    - configMapRef:
        name: app-config
    - secretRef:
        name: app-secret
    env:
    - name: VAR1
      value: value1
    - name: VAR2
      valueFrom:
        configMapKeyRef: # Get value from config map
          name: app-config
          key: PROP1
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef: # Get value from secret
          name: app-secret
          key: DB_PASS
    volumeMounts:
    - mountPath: /usr/src/app/images
      name: images-volume
    - mountPath: /usr/src/app/logs
      name: log-volume
    - mountPath: /usr/src/app/data
      name: data-volume
    securityContext:
      capabilities:
        add: ["SYS_TIME"]
  volumes:
  - name: images-volume
    emptyDir:
      sizeLimit: 100Mi
  - name: log-volume
    persistentVolumeClaim:
      claimName: claim-log-1
  - name: data-volume
    persistentVolumeClaim:
      claimName: gcp-data
  tolerations:
  - key: app
    value: myapp
    operator: Equal
    effect: NoSchedule
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: size # label name
            operator: In
            values: 
            - large # label values
  securityContext:
    runAsUser: 0 # To as a root user
